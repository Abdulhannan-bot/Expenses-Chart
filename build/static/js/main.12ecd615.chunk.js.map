{"version":3,"sources":["components/UI/Card.js","components/NewExpense/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseFrom.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItems","title","amount","ExpensesList","data","length","map","expense","id","Chartbar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setisEditing","enteredExpensedata","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.12ecd615.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  return (\n    <div className={classes}>{props.children}</div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = function(event) {\n    props.onChangeFilter(event.target.value);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n     \n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(`en-US`, { month: `long` });\n  const day = props.date.toLocaleString(`en-US`, { day: `2-digit` });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItems.css\";\n\nfunction ExpenseItems(props) {\n  // const expenseDate = new Date(2022, 1, 23).toDateString();\n  // const expenseTitle = `Car Insurance`;\n  // const expenseAmount = 294.67;\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}></ExpenseDate>\n        <div className=\"expense-items__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItems;\n","import React from \"react\";\n\nimport ExpenseItems from \"./ExpenseItems\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = function (props) {\n  if (props.data.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.data.map((expense) => (\n      <ExpenseItems\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n      ))}    \n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport './ChartBar.css';\n\nconst Chartbar = function(props) {\n  let barFillHeight = '0%';\n  if(props.maxValue>0) {\n    barFillHeight = Math.round((props.value/props.maxValue)*100)+'%';\n  }\n  return <div className=\"chart-bar\">\n    <div className=\"chart-bar__inner\">\n      <div className=\"chart-bar__fill\" style={{height:barFillHeight}}>\n\n      </div>\n    </div>\n    <div className=\"chart-bar__label\">{props.label}</div>\n  </div>\n}\n\nexport default Chartbar;","import React from \"react\";\n\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar.js\";\n\nconst Chart = function (props) {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from '../Chart/Chart.js';\n\nconst ExpensesChart = function(props) {\n  const chartDataPoints = [\n    {label: `Jan`, value: 0,},\n    {label: `Feb`, value: 0,},\n    {label: `Mar`, value: 0,},\n    {label: `Apr`, value: 0,},\n    {label: `May`, value: 0,},\n    {label: `Jun`, value: 0,},\n    {label: `Jul`, value: 0,},\n    {label: `Aug`, value: 0,},\n    {label: `Sep`, value: 0,},\n    {label: `Oct`, value: 0,},\n    {label: `Nov`, value: 0,},\n    {label: `Dec`, value: 0,}\n  ];\n\n  for( const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpensesChart;","import \"./Expenses.css\";\n//import ExpenseItems from \"./ExpenseItems\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from \"react\";\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(`2020`);\n\n  const filterChangeHandler = function (selectedYear) {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpense = props.data.filter(\n    (expense) => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpense}/>\n        <ExpensesList data = {filteredExpense}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, {useState} from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = function(props) {\n  const [enteredTitle, setEnteredTitle] = useState(``);\n  const [enteredAmount, setEnteredAmount] = useState(``);\n  const [enteredDate, setEnteredDate] = useState(``);\n\n  // alternative way\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: ``,\n  //   enteredAmount: ``,\n  //   enteredDate: ``,\n  // });\n\n  const titleChangeHandler = function(event) {\n    setEnteredTitle(event.target.value);\n\n    // // alternative way\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value;\n    // })\n\n    // // If dependent on previous input\n    // setUserInput((prevState) => { \n    //   return {...prevState, enteredTitle: event.target.value};\n    // });\n  }\n\n  const amountChangeHandler = function(event) {\n    setEnteredAmount(event.target.value);\n    // setUserInput((prevState) => { \n    //   return {...prevState, enteredAmount: event.target.value};\n    // });\n  }\n\n  const dateChangeHandler = function(event) {\n    setEnteredDate(event.target.value);\n    // setUserInput((prevState) => { \n    //   return {...prevState, enteredDate: event.target.value};\n    // });\n  }\n\n  const submitHandler = function(event) {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(``);\n    setEnteredAmount(``);\n    setEnteredDate(``);\n  }\n\n  return <form onSubmit={submitHandler}>\n    <div className=\"new-expense__controls\">\n      <div className=\"new-expense__control\">\n        <label>Title</label>\n        <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Amount</label>\n        <input type=\"number\" value={enteredAmount} min=\"1\" step=\"1\" onChange={amountChangeHandler}/>\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Date</label>\n        <input type=\"Date\" value={enteredDate} min=\"2019-01-01\" max=\"2024-12-31\" onChange={dateChangeHandler}/>\n      </div>\n    </div>\n    <div className=\"new-expense__action\">\n      <button type=\"submit\" onClick={props.onCancel}>Cancel</button>\n      <button type=\"submit\">Add Expense</button>\n    </div>\n  </form>\n}\n\nexport default ExpenseForm;","import React, { useState } from \"react\";\n\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseFrom\";\n\nconst NewExpense = function (props) {\n  const [isEditing, setisEditing] = useState(false);\n\n  const saveExpenseDataHandler = function (enteredExpensedata) {\n    const expenseData = {\n      ...enteredExpensedata,\n      id: Math.random.toString(),\n    };\n    props.onAddExpense(expenseData);\n    setisEditing(false);\n  };\n\n  const startEditingHandler = function() {\n    setisEditing(true);\n  }\n\n  const stopEditing = function() {\n    setisEditing(false);\n  }\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditing} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2020, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = function (expenses) {\n    setExpenses((prevExpenses) => [expenses, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}